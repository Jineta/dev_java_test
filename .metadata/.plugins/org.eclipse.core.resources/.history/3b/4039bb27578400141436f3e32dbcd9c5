package com.example.fw;


import static org.junit.Assert.fail;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import com.example.tests.BaseForTests;

public class ApplicationManager {
	
public static WebDriver driver;
public static String baseUrl;
public static boolean acceptNextAlert = true;
private static StringBuffer verificationErrors = new StringBuffer();
	
   public ApplicationManager () {
	 driver = new FirefoxDriver();
	 baseUrl = "http://localhost:8081";
	 driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
 }
 
	public void stop() {
		driver.quit();
	    String verificationErrorString = verificationErrors.toString();
	    if (!"".equals(verificationErrorString)) {
	      fail(verificationErrorString);
	    }
	    
	    
	public void returnToGroupsPage() {
		driver.findElement(By.linkText("group page")).click();
	}

	public void openMainPage() {
		driver.get(BaseForTests.baseUrl + "/");
	}

	public void submitContactCreation() {
		BaseForTests.driver.findElement(By.name("submit")).click();
	}

	public void returnToMainPageFromContact() {
		BaseForTests.driver.findElement(By.linkText("home page")).click();
	}

	public void gotoGroupPage() {
			BaseForTests.driver.findElement(By.linkText("groups")).click();
		}

	public void initGroupCreation() {
		BaseForTests.driver.findElement(By.name("new")).click();
	}

	public void submitGroupCreation() {
		BaseForTests.driver.findElement(By.name("submit")).click();
	}

	public void initContactCreation() {
		BaseForTests.driver.findElement(By.linkText("add new")).click();
	}

	public boolean isElementPresent(By by) {
	    try {
	      BaseForTests.driver.findElement(by);
	      return true;
	    } catch (NoSuchElementException e) {
	      return false;
	    }
	  }

	public boolean isAlertPresent() {
	    try {
	      BaseForTests.driver.switchTo().alert();
	      return true;
	    } catch (NoAlertPresentException e) {
	      return false;
	    }
	  }

	public String closeAlertAndGetItsText() {
	    try {
	      Alert alert = BaseForTests.driver.switchTo().alert();
	      String alertText = alert.getText();
	      if (BaseForTests.acceptNextAlert) {
	        alert.accept();
	      } else {
	        alert.dismiss();
	      }
	      return alertText;
	    } finally {
	      BaseForTests.acceptNextAlert = true;
	    }
	  }

		
	}

}
