package com.example.tests;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;

import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;

import com.example.fw.ApplicationManager;

public class BaseForTests {
	
 protected static ApplicationManager app;	/*we need static app in order to run several classes in one test in testsuite "иначе, он просто остаётся в том объекте тестового класса, который был создан для выполнения первого теста
 для второго тестового класса создаётся новый объект (другого класса) -- и в нём ссылка на ApplicationManager уже никем не инициализируется"*/
 private int checkFrequency;
 private int checkCounter;
 
 @BeforeTest
 public void setUp() throws Exception {
	 String configFile = System.getProperty("configFile","application.properties"); // required by user, default
	 Properties properties =  new Properties();
	 properties.load(new FileReader(new File(configFile)));
	 app = new ApplicationManager(properties);	 
	 checkCounter = 0;
	 checkFrequency = Integer.parseInt(properties.getProperty("check.frequency","0"));
	 }
 
 protected boolean wantToCheck(){
	 checkCounter++;
	 if (checkCounter > checkFrequency)
	 {checkCounter = 0;
	 	return true;
	 }else{
		return false;
	 }
 }
 
 @AfterTest
 public void tearDown() throws Exception {
	    app.stop();		
	  }

}
 

