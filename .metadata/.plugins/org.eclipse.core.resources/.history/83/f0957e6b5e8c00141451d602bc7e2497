package com.example.tests;

import static org.testng.Assert.assertEquals;

import java.util.Collections;
import java.util.List;
import java.util.Random;
import org.testng.annotations.Test;

public class GroupRemovalTests extends BaseForTests {

	@Test
public void deleteSomeGroup(){
		app.getNavigationHelper().openMainPage();
	    app.getNavigationHelper().gotoGroupPage();
		
	   //save old state
		List<GroupData> oldList = app.getGroupHelper().getGroups();
	    
	    // actions
		Random rnd = new Random();
		int index = rnd.nextInt(oldList.size()-1);
	    app.getGroupHelper().deleteGroup(index);		
		app.getNavigationHelper().returnToGroupsPage();
		
		//save new state
	    List<GroupData> newList = app.getGroupHelper().getGroups();
	   
	    //compare states	    
	    oldList.remove(index);
	    Collections.sort(oldList);
	    assertEquals(newList, oldList);
	}
	
	@Test
	public void deleteAllGroups(){
		app.getNavigationHelper().openMainPage();
	    app.getNavigationHelper().gotoGroupPage();
		
	   //save old state
		List<GroupData> oldList = app.getGroupHelper().getGroups();
	    
	    // actions
		int end = oldList.size();
		for (int index = 0; index < end; index++) {
		app.getGroupHelper().deleteGroup(index);	
		oldList.remove(index);
		}		
	    app.getNavigationHelper().returnToGroupsPage();
		
		//save new state
	    List<GroupData> newList = app.getGroupHelper().getGroups();
	   
	    //compare states	     
	    Collections.sort(oldList);
	    assertEquals(newList, oldList);
	}
}

